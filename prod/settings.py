"""
Django settings for prod project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

if not os.getenv("ENV_VERSION") == "test":
    load_dotenv(".env.dev")
    load_dotenv(".env.dev.db")
# elif os.getenv("ENV_VERSION") == "prod":
# load_dotenv(".env.prod")
# load_dotenv(".env.prod.db")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(os.environ.get("DEBUG", default=1)))

ALLOWED_HOSTS = [
    "localhost",
    "localhost:8080",
    "127.0.0.1",
    "127.0.0.1:8080",
]
CSRF_TRUSTED_ORIGINS = ["http://*.localhost:1337", "http://*.localhost:8080"]
CSRF_COOKIE_DOMAIN = ["http://localhost", "http://127.0.0.1"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    # 'django_extensions',  # debug only
    'debug_toolbar',     # debug only
    'api',
    'cabinet',
    'coaching',
    'diet',
    'libs',
    'utils',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",
    "http://127.0.0.1:8080"
]
CORS_ORIGIN_ALLOW_ALL = True

REST_FRAMEWORK = {
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    # 'PAGE_SIZE': 100,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DATE_FORMAT': '%d.%m.%Y',
    'DATE_INPUT_FORMATS': ['%d.%m.%Y'],
    'UPLOADED_FILES_USE_URL': True,
    # 'DATETIME_FORMAT': '%d.%m.%Y',
}

ROOT_URLCONF = 'prod.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'prod.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        'ENGINE': os.environ["SQL_ENGINE"],
        'NAME': os.environ["SQL_DATABASE"],
        'USER': os.environ["SQL_USER"],
        'PASSWORD': os.environ["SQL_PASSWORD"],
        'HOST': os.environ["SQL_HOST"],
        'PORT': os.environ["SQL_PORT"],
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
] if not int(os.environ.get("DEBUG", 1)) else []

AUTH_USER_MODEL = 'cabinet.TgUser'


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_L10N = True

DATETIME_INPUT_FORMATS = ['%d.%m.%Y']

# DATETIME_FORMAT = '%d.%m.%Y'
DATE_FORMAT = '%d.%m.%Y'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/


STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "static"

# STATICFILES_DIRS = [
#     BASE_DIR / "static",
# ]

MEDIA_URL = '/media/'
MEDIA_ROOT = f'{BASE_DIR}/media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


INTERNAL_IPS = [
    "127.0.0.1",
]

DJOSER = {
    'SERIALIZERS': {
        'user_create': 'api.serializers.authorization_serializers.UserRegistrationSerializer'
    }
}


# Models visualization tool settings

# GRAPH_MODELS = {
#     'all_applications': True,
#     'group_models': True,
# }
